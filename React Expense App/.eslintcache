[{"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\index.js":"1","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\App.js":"2","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\store\\app-data.js":"3","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Modal.js":"4","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Card.js":"5","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\AppCenterComponent.js":"6","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Overlay.js":"7","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Container\\Container.js":"8","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Header\\Header.js":"9","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\ExpenseList.js":"10","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\Balance.js":"11","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\AddLogForm.js":"12","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\Overview.js":"13","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Settings\\Settings.js":"15","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\ExpenseItem.js":"16","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Button.js":"17","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Panel.js":"18","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Input.js":"19","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Settings\\SelectTheme.js":"20"},{"size":281,"mtime":1635358575596,"results":"21","hashOfConfig":"22"},{"size":3145,"mtime":1635357890010,"results":"23","hashOfConfig":"22"},{"size":3938,"mtime":1635357869302,"results":"24","hashOfConfig":"22"},{"size":857,"mtime":1635267370062,"results":"25","hashOfConfig":"22"},{"size":303,"mtime":1635254586528,"results":"26","hashOfConfig":"22"},{"size":580,"mtime":1635269075899,"results":"27","hashOfConfig":"22"},{"size":437,"mtime":1635185514776,"results":"28","hashOfConfig":"22"},{"size":298,"mtime":1635164165275,"results":"29","hashOfConfig":"22"},{"size":1099,"mtime":1635343722234,"results":"30","hashOfConfig":"22"},{"size":830,"mtime":1635342555491,"results":"31","hashOfConfig":"22"},{"size":1494,"mtime":1635342528758,"results":"32","hashOfConfig":"22"},{"size":2723,"mtime":1635357899049,"results":"33","hashOfConfig":"22"},{"size":1278,"mtime":1635342568020,"results":"34","hashOfConfig":"22"},{"size":329,"mtime":1635169568696,"results":"35","hashOfConfig":"22"},{"size":375,"mtime":1635241816289,"results":"36","hashOfConfig":"22"},{"size":2782,"mtime":1635357879177,"results":"37","hashOfConfig":"22"},{"size":232,"mtime":1635357873496,"results":"38","hashOfConfig":"22"},{"size":256,"mtime":1635166882522,"results":"39","hashOfConfig":"22"},{"size":358,"mtime":1635357903434,"results":"40","hashOfConfig":"22"},{"size":1487,"mtime":1635271890193,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v6fo0f",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\index.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\App.js",[],["86","87"],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\store\\app-data.js",["88","89","90"],"//importing libraries\r\nimport React from \"react\";\r\n\r\n//importing hooks\r\nimport { useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\n//the default context is of no use as long as we are using a Provider\r\n//we are using the following values just for IDE support\r\n\r\nconst AppData = React.createContext({\r\n  income: 0,\r\n  expense: 0,\r\n  logArray: [],\r\n  addLogHandler: () => {},\r\n  deleteLog: () => {},\r\n  editLog: () => {},\r\n  selectedTheme: \"\",\r\n  changeThemeHandler: ()=>{}\r\n});\r\n\r\nconst newExpenseIncomeValues=(newLogArray)=>{\r\n\r\n\r\n  let expense=0,income=0;\r\n\r\n  for(let i=0;i<newLogArray.length;i++){\r\n    if(newLogArray[i].type==\"income\"){\r\n      income+=newLogArray[i].amount;\r\n    }else{\r\n      expense+=newLogArray[i].amount;\r\n    }\r\n  }\r\n\r\n  console.log(\"returning new income and expenses hehe\",income,expense);\r\n  return [income,expense];\r\n}\r\n\r\n\r\n//initial function for our useReducer hook\r\nconst initialExpenseReducer = (initialState)=>{\r\n\r\n  const [newExpense,newIncome] = newExpenseIncomeValues(initialState.logArray);\r\n  return {\r\n    income: newIncome,\r\n    expense: newExpense,\r\n    logArray: initialState.logArray,\r\n  };\r\n}\r\n\r\nconst expenseReducer = (currentState, action) => {\r\n  if (action.type === \"deleteLog\") {\r\n    const newLogArray = currentState.logArray.filter((log) => {\r\n      return !(action.itemID == log.id);\r\n    });\r\n\r\n    const [newIncome,newExpense] = newExpenseIncomeValues(newLogArray);\r\n    return {\r\n      income: newIncome,\r\n      expense: newExpense,\r\n      logArray: newLogArray,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"addLog\") {\r\n    //pushing the new log into the array\r\n    console.log(\"adding a new log\");\r\n    console.log(action.newLogObject);\r\n    currentState.logArray.push(action.newLogObject);\r\n    const [newIncome,newExpense] = newExpenseIncomeValues(currentState.logArray);\r\n\r\n    console.log(\"object being returned after add\",{\r\n      income: newIncome,\r\n      expense: newExpense,\r\n      logArray: currentState.logArray,\r\n    })\r\n    return {\r\n      income: newIncome,\r\n      expense: newExpense,\r\n      logArray: currentState.logArray,\r\n    };\r\n  }\r\n\r\n  //default returns, will be used to copy(to not have bugs) and return default\r\n  return {\r\n    income: 0,\r\n    expense: 0,\r\n    logArray: [],\r\n  };\r\n};\r\n\r\nexport const AppDataProvider = (props) => {\r\n  console.log(\"rendering appdataprovider now\");\r\n  const [expenseState, expenseDispatch] = useReducer(expenseReducer, {\r\n    income: 0,\r\n    expense: 0,\r\n    logArray: [\r\n      {\r\n        id: Math.random(),\r\n        type: \"expense\",\r\n        title: \"expense 1\",\r\n        amount: 200,\r\n        note: \"yuss\",\r\n        date: Date.now(),\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        type: \"income\",\r\n        title: \"income 1\",\r\n        amount: 200,\r\n        note: \"yuss\",\r\n        date: Date.now(),\r\n      },\r\n      {\r\n        id: Math.random(),\r\n        type: \"expense\",\r\n        title: \"expense 2\",\r\n        amount: 200,\r\n        note: \"yuss\",\r\n        date: Date.now(),\r\n      }\r\n    ],\r\n  },initialExpenseReducer);\r\n\r\n  const [currencySymbol, setCurrencySymbol] = useState(\"$\");\r\n  const [selectedTheme, setSelectedTheme] = useState(\"light\");\r\n\r\n  const deleteLogHandler = (id) => {\r\n    expenseDispatch({ type: \"deleteLog\", itemID: id });\r\n  };\r\n\r\n  const addLogHandler = (newLogObject) => {\r\n    expenseDispatch({ type: \"addLog\", newLogObject: newLogObject });\r\n  };\r\n\r\n  const changeThemeHandler = (newTheme)=>{\r\n    setSelectedTheme(newTheme);\r\n  }\r\n\r\n  console.log(\"before returning contextprovider\");\r\n  return (\r\n    <AppData.Provider\r\n      value={{\r\n        expenseData: expenseState,\r\n        deleteLogHandler: deleteLogHandler,\r\n        addLogHandler: addLogHandler,\r\n        currencySymbol: currencySymbol,\r\n        selectedTheme:selectedTheme,\r\n        changeThemeHandler:changeThemeHandler\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AppData.Provider>\r\n  );\r\n};\r\n\r\nexport default AppData;\r\n","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Modal.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Card.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\AppCenterComponent.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Overlay.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Container\\Container.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Header\\Header.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\ExpenseList.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\Balance.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\AddLogForm.js",["91","92"],"//importing libraries\r\nimport React from \"react\";\r\n\r\n//importing stylesheets\r\nimport classes from \"./AddLogForm.module.css\";\r\n\r\n//importing context\r\nimport AppData from \"../../store/app-data\";\r\n\r\n//importing hooks\r\nimport { useState, useContext } from \"react\";\r\n\r\n//importing UI constituting components\r\nimport Button from \"../UI/Button\";\r\nimport Input from \"../UI/Input\";\r\n\r\nconst AddLogForm = (props) => {\r\n  console.log(\"rendering AddLogForm component\");\r\n  const appData = useContext(AppData);\r\n  console.log(appData);\r\n\r\n  const [expenseType, setExpenseType] = useState(\"income\");\r\n\r\n  const changeExpenseTypeToIncome = () => {\r\n    setExpenseType(\"income\");\r\n  };\r\n\r\n  const changeExpenseTypeToExpense = () => {\r\n    setExpenseType(\"expense\");\r\n  };\r\n\r\n  let selectedThemeClass = \"\";\r\n  if (appData.selectedTheme === \"dark\") {\r\n    selectedThemeClass = \"dark-mode-theme\";\r\n  } else if (appData.selectedTheme === \"light\") {\r\n    selectedThemeClass = \"light-mode-theme\";\r\n  } else if (appData.selectedTheme === \"violet\") {\r\n    selectedThemeClass = \"violet-mode-theme\";\r\n  }\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    let title = e.target[0].value;\r\n    let amount = e.target[1].value;\r\n    let note = e.target[2].value;\r\n\r\n    let newLogObject = {\r\n      type: expenseType === \"income\" ? \"income\" : \"expense\",\r\n      title: title,\r\n      amount: parseInt(amount),\r\n      note: note,\r\n      id: Math.random(),\r\n      date: Date.now(),\r\n    };\r\n\r\n    appData.addLogHandler(newLogObject);\r\n    props.onFormSubmission();\r\n  };\r\n  return (\r\n    <div className={`${classes[selectedThemeClass]} ${classes[\"add-log-form-container\"]}`}>\r\n      <div className={classes[\"toggle-expense-type-button-container\"]}>\r\n        <Button\r\n          className={` ${classes[\"toggle-expense-type-button\"]} ${\r\n            expenseType == \"income\" ? classes[\"selected-button\"] : \"\"\r\n          }`}\r\n          onClick={changeExpenseTypeToIncome}\r\n          title=\"Add Income\"\r\n        ></Button>\r\n        <Button\r\n          className={` ${classes[\"toggle-expense-type-button\"]} ${\r\n            expenseType == \"expense\" ? classes[\"selected-button\"] : \"\"\r\n          }`}\r\n          onClick={changeExpenseTypeToExpense}\r\n          title=\"Add Expense\"\r\n        ></Button>\r\n      </div>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <Input type=\"text\" id=\"title\" value=\"Title\" />\r\n        <Input type=\"number\" id=\"amount\" value=\"Amount\" />\r\n        <Input type=\"text\" id=\"Note\" value=\"Note\" />\r\n        <button type=\"submit\" className={classes[\"form-submit-button\"]}>\r\n          {expenseType === \"income\" ? \"Add Income\" : \"Add Expense\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLogForm;\r\n","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\Overview.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Constituting\\ExpenseItem.js",["93"],"//importing libraries\r\nimport React from \"react\";\r\n\r\n//importing hooks\r\nimport { useContext, useState } from \"react\";\r\n\r\n//importing stylesheets\r\nimport classes from \"./ExpenseItem.module.css\";\r\n\r\n//importing app context\r\nimport AppData from \"../../store/app-data\";\r\n\r\n//import UI components\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  console.log(\"rendering ExpenseItem component\");\r\n  const appData = useContext(AppData);\r\n\r\n  //the following state will be used to show animation\r\n\r\n  const [isItemBeingDeleted, setIsItemBeingDeleted] = useState(false);\r\n\r\n  let selectedThemeClass = \"\";\r\n  let selectedThemeClassFa = \"\";\r\n  if (appData.selectedTheme === \"dark\") {\r\n    selectedThemeClass = \"dark-mode-theme\";\r\n  } else if (appData.selectedTheme === \"light\") {\r\n    selectedThemeClass = \"light-mode-theme\";\r\n  } else if (appData.selectedTheme === \"violet\") {\r\n    selectedThemeClass = \"violet-mode-theme\";\r\n  }\r\n  selectedThemeClassFa= selectedThemeClass+\"-fa\";\r\n\r\n  //earlier I declared this function inside the button component,\r\n  //but it was interfearing with other buttons as well.\r\n  const deleteLogHandler = (e) => {\r\n    if (e.target.nodeName === \"BUTTON\") {\r\n      setIsItemBeingDeleted(true);\r\n      setTimeout(() => {\r\n        appData.deleteLogHandler(e.target.dataset.itemid);\r\n      }, 500);\r\n    } else if (e.target.nodeName == \"I\") {\r\n      setIsItemBeingDeleted(true);\r\n      setTimeout(() => {\r\n        appData.deleteLogHandler(e.target.parentNode.dataset.itemid);\r\n      }, 500);\r\n    }\r\n    //props.onClick(e.target);\r\n    console.log(\"Hello im clicked\");\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <div\r\n        className={`${classes[\"expense-item-container\"]} ${classes[selectedThemeClass]} ${\r\n          isItemBeingDeleted ? classes[\"item-being-deleted\"] : \"\"\r\n        }`}\r\n      >\r\n        <div className={classes[\"expense-item-info\"]}>\r\n          <p>{props.title}</p>\r\n          <p>{`${appData.currencySymbol} ${props.amount}`}</p>\r\n        </div>\r\n        <div className={classes[\"expense-item-controls\"]}>\r\n          <Button\r\n            itemID={props.id}\r\n            title={<i className={`${\"fas fa-pen\"} ${classes[selectedThemeClassFa]}`}></i>}\r\n            className={classes[\"button-edit\"]}\r\n          ></Button>\r\n          <Button\r\n            itemID={props.id}\r\n            title={<i className={`${\"fas fa-trash-alt\"} ${classes[selectedThemeClassFa]}`}></i>}\r\n            className={classes[\"button-delete\"]}\r\n            onClick={deleteLogHandler}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n\r\n/*\r\nNOTE:\r\nWe provide itemID to the buttons so that when they are clicked, we can identify the expense that was clicked\r\n\r\n\r\n*/\r\n","C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Button.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Panel.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\UI\\Input.js",[],"C:\\Users\\rajee\\OneDrive\\Desktop\\React Expense App\\src\\components\\Settings\\SelectTheme.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":27,"column":27,"nodeType":"100","messageId":"101","endLine":27,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":53,"column":30,"nodeType":"100","messageId":"101","endLine":53,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":124,"column":26,"nodeType":"104","messageId":"105","endLine":124,"endColumn":43},{"ruleId":"98","severity":1,"message":"99","line":63,"column":25,"nodeType":"100","messageId":"101","endLine":63,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":70,"column":25,"nodeType":"100","messageId":"101","endLine":70,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":44,"column":34,"nodeType":"100","messageId":"101","endLine":44,"endColumn":36},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setCurrencySymbol' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]